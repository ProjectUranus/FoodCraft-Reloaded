buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        maven {
            name = "gradle"
            url = "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("com.anatawa12.forge:ForgeGradle:2.3-1.0.+") {
            changing = true
        }
    }
}

plugins {
    id 'java-library'
    id "org.jetbrains.kotlin.jvm" version "1.3.50"
}

apply plugin: "net.minecraftforge.gradle.forge"

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

sourceCompatibility = targetCompatibility = "1.8" // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = "1.8"
}

version = minecraft_version + "-" + mod_version
group= mod_group // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = mod_id

repositories {
	mavenCentral()
	maven {
		// location of the maven that hosts JEI files
		name = "Progwml6 maven"
		url = "https://dvs1.progwml6.com/files/maven"
	}
	maven {
		url "https://maven.shadowfacts.net/"
	}
    maven {
        name = "Cyclops Repo"
        url = "https://oss.jfrog.org/artifactory/simple/libs-release/"
        metadataSources { artifact() }
    }
	maven { // TOP
		name 'tterrag maven'
		url "https://maven.tterrag.com/"
	}
}

compileKotlin {
    kotlinOptions {
        jvmTarget = 1.8
    }
}

minecraft {
    version = minecraft_version + "-" + forge_version
    runDir = "run"

    replace "@version@", mod_version

    mappings = mcp_mapping_version
}

dependencies {
	api "mezz.jei:jei_1.12.2:4.15.0.293:api"
    api "mcjty.theoneprobe:TheOneProbe-1.12:1.12-1.4.28-17:api"

	implementation "net.shadowfacts:Forgelin:1.8.4"

    testImplementation "junit:junit:4.12"
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
